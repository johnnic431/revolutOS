--Base API

local tAPIsLoading={};
apiPath="";

extension=function(path)
	if not path then
		return nil;
	elseif not string.find(fs.getName(path),'%.') then
		if not addDot then
			return fs.getName(path);
		else
			return '';
		end
	else
		local _path=path;
		if path:sub(#path)=='/' then
			_path=path:sub(1,#path-1);
		end
		local ext=_path:gmatch('%.[0-9a-z]+$')();
		if ext then
			ext=ext:sub(2);
		else
			return '';
		end
		if addDot then
			ext='.'..ext;
		end
		return ext:lower();
	end
end

removeExtension=function(path)
	if path:sub(1,1)=='.' then
		return path;
	end
	local ext=extension(path);
	if ext==path then
		return fs.getName(path);
	end
	return string.gsub(path,ext,''):sub(1,-2);
end

function loadAPI(path)
	if not fs.exists(path) then
		error("File does not exist",2);
	end
	if fs.isDir(path) then
		error("Cannot load directory",2);
	end
	local name=fs.getName(path);
	name=name:match("(%a+)%.?.-");
	if _G[name] then
		error("API "..name.." already loaded",2);
	end
	local env=setmetatable({},{__index=_G});
	local func,err=loadfile(path);
	if not func then
		error(err,0);
	end
	setfenv(func,env);
	func();
	local api={};
	for k,v in pairs(env) do
		api[k]=v;
	end
	_G[name]=api;
	return true
end